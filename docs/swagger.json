{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "My contacts",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "Contacts app documentation"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://nodejs-hw-mongodb-nwe2.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "Operations about contacts."
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get list of contacts",
        "operationId": "getContacts",
        "description": "Get list of contacts with endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "example": "1"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 5
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "name",
              "description": "Sort contacts."
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "isFavourite",
            "description": "Filter isFavourite",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "in": "query",
            "name": "contactType",
            "description": "Filter contactType",
            "schema": {
              "type": "string",
              "example": "personal",
              "enum": [
                "personal",
                "home",
                "work"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Show all contacts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contacts!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/contactSchema"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 1
                        },
                        "perPage": {
                          "type": "number",
                          "example": 10
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 20
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 10
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorizedError"
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create a contact",
        "operationId": "createContact",
        "description": "Endpoint for create a new contact.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phoneNumber"
                ],
                "properties": {
                  "name": {
                    "description": "Contact name",
                    "type": "string",
                    "example": "Jon Snow"
                  },
                  "email": {
                    "description": "Contact email",
                    "type": "string",
                    "example": "snowball@mail.com"
                  },
                  "phoneNumber": {
                    "description": "Contact number",
                    "type": "string",
                    "example": "380509777555"
                  },
                  "contactType": {
                    "description": "Contact type",
                    "type": "string",
                    "example": "personal",
                    "enum": [
                      "personal",
                      "home",
                      "work"
                    ]
                  },
                  "isFavourite": {
                    "description": "Favourite contact",
                    "type": "boolean"
                  },
                  "photo": {
                    "description": "Contact photo",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Contact successfully created"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contactSchema"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorizedError"
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contact by id",
        "operationId": "getContact",
        "description": "Get contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": {
              "_id": "678700d6e20ed4fb0b196581"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 678700d6e20ed4fb0b196581"
                    },
                    "data": {
                      "type": "object",
                      "items": {
                        "$ref": "#/components/schemas/contactSchema"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/notFoundError"
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Patch contact",
        "operationId": "patchContact",
        "description": "Change contact",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": {
              "_id": "678700d6e20ed4fb0b196581"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Contact name",
                    "type": "string",
                    "example": "Jon Snow"
                  },
                  "email": {
                    "description": "Contact email",
                    "type": "string",
                    "example": "snowball@mail.com"
                  },
                  "phoneNumber": {
                    "description": "Contact number",
                    "type": "string",
                    "example": "380509777555"
                  },
                  "contactType": {
                    "description": "Contact type",
                    "type": "string",
                    "example": "personal",
                    "enum": [
                      "personal",
                      "home",
                      "work"
                    ]
                  },
                  "isFavourite": {
                    "description": "Favourite contact",
                    "type": "boolean"
                  },
                  "photo": {
                    "description": "Contact photo",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact changed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contactSchema"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/notFoundError"
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete contact",
        "operationId": "deleteContact",
        "description": "Delete contact",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": {
                "_id": "678700d6e20ed4fb0b196581"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/unauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/notFoundError"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "contactSchema": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "email",
          "phoneNumber",
          "isFavourite",
          "contactType"
        ],
        "properties": {
          "_id": {
            "description": "User _id",
            "type": "string",
            "example": "678700d6e20ed4fb0b196581"
          },
          "name": {
            "description": "Contact name",
            "type": "string",
            "example": "Jon Snow"
          },
          "email": {
            "description": "Contact email",
            "type": "string",
            "example": "snowball@mail.com"
          },
          "phoneNumber": {
            "description": "Contact number",
            "type": "string",
            "example": "380509777555"
          },
          "contactType": {
            "description": "Contact type",
            "type": "string",
            "example": "personal",
            "enum": [
              "personal",
              "home",
              "work"
            ]
          },
          "isFavourite": {
            "description": "Favourite contact",
            "type": "boolean"
          },
          "userId": {
            "description": "Contact id",
            "type": "string",
            "example": "678700d6e20ed4fb0b196582"
          },
          "photo": {
            "description": "Contact photo",
            "type": "string",
            "example": "https://res.cloudinary.com/dhu0mq1ds/photo.jpg"
          }
        }
      }
    },
    "responses": {
      "unauthorizedError": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing or invalid token"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "notFoundError": {
        "description": "Contact not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Contact not found"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contact not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}